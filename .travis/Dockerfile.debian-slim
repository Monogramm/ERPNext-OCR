FROM monogramm/docker-erpnext:%%VERSION%%-debian-slim

# Install Google Chrome & Chrome WebDriver for UI tests
RUN set -ex; \
    sudo apt-get update -q; \
    sudo apt-get install -y --no-install-recommends \
        iputils-ping \
        unzip \
    ; \
    CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`; \
    sudo mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION; \
    sudo curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip; \
    sudo unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION; \
    sudo rm /tmp/chromedriver_linux64.zip; \
    sudo chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver; \
    sudo ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver; \
    export PATH="$PATH;/usr/local/bin/chromedriver"; \
    sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; \
    sudo dpkg -i google-chrome-stable_current_amd64.deb; \
    sudo apt-get -fy install; \
    rm -rf /var/lib/apt/lists/*

# Build environment variables
ENV DOCKER_TAG=travis \
    DOCKER_VCS_REF=${TRAVIS_COMMIT} \
    DOCKER_BUILD_DATE=${TRAVIS_BUILD_NUMBER}

# Copy the whole repository to app folder for manual install
#COPY --chown=frappe:frappe . "/home/$FRAPPE_USER"/frappe-bench/apps/erpnext_ocr

ARG BUILD_BRANCH
ARG BUILD_URL

RUN set -ex; \
    sudo apt-get update -q; \
    sudo apt-get install -y --no-install-recommends \
        ghostscript \
        imagemagick \
        tesseract-ocr \
    ; \
    rm -rf /var/lib/apt/lists/*; \
    sudo sed -i \
        -e 's/rights="none" pattern="PDF"/rights="read" pattern="PDF"/g' \
        /etc/ImageMagick*/policy.xml \
    ; \
    sudo mkdir -p "/home/$FRAPPE_USER"/frappe-bench/logs; \
    sudo touch "/home/$FRAPPE_USER"/frappe-bench/logs/bench.log; \
    sudo chmod 777 \
        "/home/$FRAPPE_USER"/frappe-bench/logs \
        "/home/$FRAPPE_USER"/frappe-bench/logs/* \
    ; \
    bench get-app --branch ${BUILD_BRANCH} ${BUILD_URL}
    #echo "Manually installing app for CI (not needed normally)"; \
    #./env/bin/pip install -q -e "apps/erpnext_ocr" --no-cache-dir; \
    #test ! "$FRAPPE_BRANCH" = "v10.x.x" \
    #    && ./env/bin/pip3 install -q -e "apps/erpnext_ocr" --no-cache-dir \
    #    && bench build --app erpnext_ocr \
    #; \
    #sudo mkdir -p "${FRAPPE_WD}/sites"; \
    #sudo touch "${FRAPPE_WD}/sites/apps.txt"; \
    #sudo chown $FRAPPE_USER:$FRAPPE_USER "${FRAPPE_WD}/sites/apps.txt"; \
    #echo "frappe" > "${FRAPPE_WD}/sites/apps.txt"; \
    #echo "erpnext" >> "${FRAPPE_WD}/sites/apps.txt"; \
    #echo "erpnext_ocr" >> "${FRAPPE_WD}/sites/apps.txt"
